diff --git a/CMakeLists.txt b/CMakeLists.txt
index 582ada3..d6fd980 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,60 +1,31 @@
-
-cmake_minimum_required(VERSION 3.7 FATAL_ERROR)
-project (HPTT C CXX)
-
-set(CMAKE_CXX_STANDARD 11)
-set(CMAKE_CXX_STANDARD_REQUIRED ON)
-set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
-set(ENABLE_IBM OFF)
-
-if(CMAKE_SYSTEM_PROCESSOR STREQUAL "ppc64le")
-  set(ENABLE_IBM ON)
-endif()
-
-if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -qopenmp -xhost)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-  if(ENABLE_IBM)
-    set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp)
-  else()
-    set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp -march=native -mtune=native)
-  endif()
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp -march=native)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "PGI")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -silent -w -Mnovect)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "XL")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -qsmp=omp)
-endif()
-
-if(ENABLE_AVX)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mavx -DHPTT_ARCH_AVX)
-elseif(ENABLE_ARM)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mfpu=neon -DHPTT_ARCH_ARM)
-elseif(ENABLE_IBM)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mtune=native -DHPTT_ARCH_IBM -maltivec -mabi=altivec)
-endif()
-
-set(HPTT_SRCS src/hptt.cpp src/plan.cpp src/transpose.cpp src/utils.cpp)
-
-add_library(hptt STATIC ${HPTT_SRCS})
-target_compile_features(hptt PUBLIC cxx_std_11)
-target_include_directories(hptt PUBLIC ${PROJECT_SOURCE_DIR}/include)
-#target_compile_definitions(hptt PRIVATE ${HPTT_CXX_COMPILE_DEFS})
-target_compile_options(hptt PUBLIC ${HPTT_CXX_FLAGS})
-
-install(TARGETS hptt
-        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
-
-set(HPTT_INCLUDES 
-    include/compute_node.h 
-    include/hptt_types.h 
-    include/hptt.h 
-    include/macros.h 
-    include/plan.h 
-    include/utils.h 
-    include/transpose.h)
-
-install(FILES ${HPTT_INCLUDES}
-        DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
+cmake_minimum_required(VERSION 3.15)
+project (HPTT
+         VERSION 1.0.6
+         HOMEPAGE_URL "https://github.com/springer13/hptt.git"
+         LANGUAGES CXX
+         )
+
+option(BUILD_SHARED_LIBS                "Builds shared libraries"                                                 OFF)
+option(CMAKE_POSITION_INDEPENDENT_CODE  "Use -fPIC when compiling shared libraries"                               ON)
+
+
+add_library(hptt src/hptt.cpp src/plan.cpp src/transpose.cpp src/utils.cpp)
+target_compile_features(hptt PUBLIC cxx_std_17)
+target_include_directories(hptt PRIVATE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>)
+target_include_directories(hptt SYSTEM INTERFACE $<INSTALL_INTERFACE:include>)
+
+find_package(OpenMP REQUIRED)
+target_link_libraries(hptt PUBLIC OpenMP::OpenMP_CXX)
+
+# Install
+include(GNUInstallDirs)
+install(TARGETS hptt EXPORT hpttTarget)
+install(EXPORT hpttTarget NAMESPACE hptt:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/hptt)
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT hptt-include)
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+        ${CMAKE_BINARY_DIR}/hpttConfigVersion.cmake
+        VERSION ${PROJECT_VERSION}
+        COMPATIBILITY AnyNewerVersion
+)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 582ada3..d6fd980 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,60 +1,31 @@
-
-cmake_minimum_required(VERSION 3.7 FATAL_ERROR)
-project (HPTT C CXX)
-
-set(CMAKE_CXX_STANDARD 11)
-set(CMAKE_CXX_STANDARD_REQUIRED ON)
-set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
-set(ENABLE_IBM OFF)
-
-if(CMAKE_SYSTEM_PROCESSOR STREQUAL "ppc64le")
-  set(ENABLE_IBM ON)
-endif()
-
-if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -qopenmp -xhost)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-  if(ENABLE_IBM)
-    set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp)
-  else()
-    set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp -march=native -mtune=native)
-  endif()
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -fopenmp -march=native)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "PGI")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -silent -w -Mnovect)
-elseif(CMAKE_CXX_COMPILER_ID STREQUAL "XL")
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -qsmp=omp)
-endif()
-
-if(ENABLE_AVX)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mavx -DHPTT_ARCH_AVX)
-elseif(ENABLE_ARM)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mfpu=neon -DHPTT_ARCH_ARM)
-elseif(ENABLE_IBM)
-  set(HPTT_CXX_FLAGS ${HPTT_CXX_FLAGS} -mtune=native -DHPTT_ARCH_IBM -maltivec -mabi=altivec)
-endif()
-
-set(HPTT_SRCS src/hptt.cpp src/plan.cpp src/transpose.cpp src/utils.cpp)
-
-add_library(hptt STATIC ${HPTT_SRCS})
-target_compile_features(hptt PUBLIC cxx_std_11)
-target_include_directories(hptt PUBLIC ${PROJECT_SOURCE_DIR}/include)
-#target_compile_definitions(hptt PRIVATE ${HPTT_CXX_COMPILE_DEFS})
-target_compile_options(hptt PUBLIC ${HPTT_CXX_FLAGS})
-
-install(TARGETS hptt
-        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
-
-set(HPTT_INCLUDES 
-    include/compute_node.h 
-    include/hptt_types.h 
-    include/hptt.h 
-    include/macros.h 
-    include/plan.h 
-    include/utils.h 
-    include/transpose.h)
-
-install(FILES ${HPTT_INCLUDES}
-        DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
+cmake_minimum_required(VERSION 3.15)
+project (HPTT
+         VERSION 1.0.6
+         HOMEPAGE_URL "https://github.com/springer13/hptt.git"
+         LANGUAGES CXX
+         )
+
+option(BUILD_SHARED_LIBS                "Builds shared libraries"                                                 OFF)
+option(CMAKE_POSITION_INDEPENDENT_CODE  "Use -fPIC when compiling shared libraries"                               ON)
+
+
+add_library(hptt src/hptt.cpp src/plan.cpp src/transpose.cpp src/utils.cpp)
+target_compile_features(hptt PUBLIC cxx_std_17)
+target_include_directories(hptt PRIVATE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>)
+target_include_directories(hptt SYSTEM INTERFACE $<INSTALL_INTERFACE:include>)
+
+find_package(OpenMP REQUIRED)
+target_link_libraries(hptt PUBLIC OpenMP::OpenMP_CXX)
+
+# Install
+include(GNUInstallDirs)
+install(TARGETS hptt EXPORT hpttTarget)
+install(EXPORT hpttTarget NAMESPACE hptt:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/hptt)
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT hptt-include)
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+        ${CMAKE_BINARY_DIR}/hpttConfigVersion.cmake
+        VERSION ${PROJECT_VERSION}
+        COMPATIBILITY AnyNewerVersion
+)
diff --git a/src/hptt.cpp b/src/hptt.cpp
index ea761c8..4aa899c 100644
--- a/src/hptt.cpp
+++ b/src/hptt.cpp
@@ -15,7 +15,7 @@
 #include <vector>
 #include <memory>
 
-#include <transpose.h>
+#include "../include/transpose.h"
 
 namespace hptt {
 
diff --git a/src/plan.cpp b/src/plan.cpp
index 7c5b9bc..858da3b 100644
--- a/src/plan.cpp
+++ b/src/plan.cpp
@@ -1,8 +1,8 @@
 
 
-#include <utils.h>
-#include <plan.h>
-#include <compute_node.h>
+#include "../include/utils.h"
+#include "../include/plan.h"
+#include "../include/compute_node.h"
 
 namespace hptt {
 
diff --git a/src/transpose.cpp b/src/transpose.cpp
index f77cd5b..67f23ec 100644
--- a/src/transpose.cpp
+++ b/src/transpose.cpp
@@ -4,12 +4,10 @@
  */
 
 #include <tuple>
-#include <string>
 #include <vector>
 #include <list>
 #include <algorithm>
 #include <numeric>
-#include <iostream>
 #include <cmath>
 #include <chrono>
 
